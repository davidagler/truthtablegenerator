
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONJUNCTDISJUNCTCONDITIONALBICONDITIONALleftNEGATIONBICONDITIONAL CONDITIONAL CONJUNCT DISJUNCT LETTER LPAREN NEGATION RPAREN TVALUEwff : subwffsubwff : LPAREN subwff RPARENsubwff : subwff BICONDITIONAL subwffsubwff : subwff DISJUNCT subwffsubwff : subwff CONJUNCT subwffsubwff : subwff CONDITIONAL subwffsubwff : NEGATION subwffsubwff : LETTERsubwff : TVALUE'
    
_lr_action_items = {'LPAREN':([0,3,4,7,8,9,10,],[3,3,3,3,3,3,3,]),'NEGATION':([0,3,4,7,8,9,10,],[4,4,4,4,4,4,4,]),'LETTER':([0,3,4,7,8,9,10,],[5,5,5,5,5,5,5,]),'TVALUE':([0,3,4,7,8,9,10,],[6,6,6,6,6,6,6,]),'$end':([1,2,5,6,12,13,14,15,16,17,],[0,-1,-8,-9,-7,-3,-4,-5,-6,-2,]),'BICONDITIONAL':([2,5,6,11,12,13,14,15,16,17,],[7,-8,-9,7,-7,-3,-4,-5,-6,-2,]),'DISJUNCT':([2,5,6,11,12,13,14,15,16,17,],[8,-8,-9,8,-7,-3,-4,-5,-6,-2,]),'CONJUNCT':([2,5,6,11,12,13,14,15,16,17,],[9,-8,-9,9,-7,-3,-4,-5,-6,-2,]),'CONDITIONAL':([2,5,6,11,12,13,14,15,16,17,],[10,-8,-9,10,-7,-3,-4,-5,-6,-2,]),'RPAREN':([5,6,11,12,13,14,15,16,17,],[-8,-9,17,-7,-3,-4,-5,-6,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'wff':([0,],[1,]),'subwff':([0,3,4,7,8,9,10,],[2,11,12,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> wff","S'",1,None,None,None),
  ('wff -> subwff','wff',1,'p_term_factor','parser_val.py',14),
  ('subwff -> LPAREN subwff RPAREN','subwff',3,'p_factor_expr','parser_val.py',18),
  ('subwff -> subwff BICONDITIONAL subwff','subwff',3,'p_wff_biconditional','parser_val.py',22),
  ('subwff -> subwff DISJUNCT subwff','subwff',3,'p_wff_disjunction','parser_val.py',30),
  ('subwff -> subwff CONJUNCT subwff','subwff',3,'p_wff_conjunction','parser_val.py',35),
  ('subwff -> subwff CONDITIONAL subwff','subwff',3,'p_wff_conditional','parser_val.py',40),
  ('subwff -> NEGATION subwff','subwff',2,'p_sub_wff_negation','parser_val.py',45),
  ('subwff -> LETTER','subwff',1,'p_factor_letter','parser_val.py',55),
  ('subwff -> TVALUE','subwff',1,'p_factor_tvalue','parser_val.py',59),
]
